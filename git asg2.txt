
cc1@Riyadz MINGW64 ~/Assignments (master)
$ add README.txt
bash: add: command not found

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git add README.txt
fatal: Unable to create 'C:/Users/cc1/.git/index.lock': File exists.

Another git process seems to be running in this repository, e.g.
an editor opened by 'git commit'. Please make sure all processes
are terminated then try again. If it still fails, a git process
may have crashed in this repository earlier:
remove the file manually to continue.

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git init
Initialized empty Git repository in C:/Users/cc1/Assignments/.git/

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git add README.txt

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git commit -m "Branching"
[master (root-commit) 52c20df] Branching
 1 file changed, 1 insertion(+)
 create mode 100644 README.txt

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git branch html-assignment

cc1@Riyadz MINGW64 ~/Assignments (master)
$ checkout html-assignment
bash: checkout: command not found

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git checkout html-assignment
Switched to branch 'html-assignment'

cc1@Riyadz MINGW64 ~/Assignments (html-assignment)
$ git add .

cc1@Riyadz MINGW64 ~/Assignments (html-assignment)
$ git commit -m "html assignments are copied"
[html-assignment 71eabc4] html assignments are copied
 4 files changed, 130 insertions(+)
 create mode 100644 end.html
 create mode 100644 game.html
 create mode 100644 highscores.html
 create mode 100644 index.html

cc1@Riyadz MINGW64 ~/Assignments (html-assignment)
$ git status
On branch html-assignment
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   highscores.html
        modified:   index.html

no changes added to commit (use "git add" and/or "git commit -a")

cc1@Riyadz MINGW64 ~/Assignments (html-assignment)
$ git add .

cc1@Riyadz MINGW64 ~/Assignments (html-assignment)
$ git status
On branch html-assignment
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   highscores.html
        modified:   index.html


cc1@Riyadz MINGW64 ~/Assignments (html-assignment)
$ git commit -m "changes in html files"
[html-assignment 6e6fa48] changes in html files
 2 files changed, 2 insertions(+), 2 deletions(-)

cc1@Riyadz MINGW64 ~/Assignments (html-assignment)
$ git checkout master
Switched to branch 'master'

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   README.txt

no changes added to commit (use "git add" and/or "git commit -a")

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git add README.txt

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git commit -m "Change into REAADME.txt"
[master feaffbd] Change into REAADME.txt
 1 file changed, 1 insertion(+)

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git chekout html-assignment
git: 'chekout' is not a git command. See 'git --help'.

The most similar command is
        checkout

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git checkout html-assignment
Switched to branch 'html-assignment'

cc1@Riyadz MINGW64 ~/Assignments (html-assignment)
$ git status
On branch html-assignment
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   end.html
        modified:   game.html

no changes added to commit (use "git add" and/or "git commit -a")

cc1@Riyadz MINGW64 ~/Assignments (html-assignment)
$ git add .

cc1@Riyadz MINGW64 ~/Assignments (html-assignment)
$ git commit -m "changes into html file end and game.html"
[html-assignment fe2de46] changes into html file end and game.html
 2 files changed, 2 insertions(+), 2 deletions(-)

cc1@Riyadz MINGW64 ~/Assignments (html-assignment)
$ git checkout master
Switched to branch 'master'

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git merge html-assignment
Merge made by the 'recursive' strategy.
 end.html        | 37 +++++++++++++++++++++++++++++++++++++
 game.html       | 53 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 highscores.html | 21 +++++++++++++++++++++
 index.html      | 19 +++++++++++++++++++
 4 files changed, 130 insertions(+)
 create mode 100644 end.html
 create mode 100644 game.html
 create mode 100644 highscores.html
 create mode 100644 index.html

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git branch -d html-assignment
Deleted branch html-assignment (was fe2de46).

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git branch css-assignment

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git checkout css-assignment
Switched to branch 'css-assignment'

cc1@Riyadz MINGW64 ~/Assignments (css-assignment)
$ git status
On branch css-assignment
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        app.css
        game.css
        highscores.css

nothing added to commit but untracked files present (use "git add" to track)

cc1@Riyadz MINGW64 ~/Assignments (css-assignment)
$ git add.
git: 'add.' is not a git command. See 'git --help'.

The most similar command is
        add

cc1@Riyadz MINGW64 ~/Assignments (css-assignment)
$ git add .

cc1@Riyadz MINGW64 ~/Assignments (css-assignment)
$ git commit -m "CSS file app.css game.css highscores.css copied"
[css-assignment 71d2af6] CSS file app.css game.css highscores.css copied
 3 files changed, 204 insertions(+)
 create mode 100644 app.css
 create mode 100644 game.css
 create mode 100644 highscores.css

cc1@Riyadz MINGW64 ~/Assignments (css-assignment)
$ git status
On branch css-assignment
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   README.txt

no changes added to commit (use "git add" and/or "git commit -a")

cc1@Riyadz MINGW64 ~/Assignments (css-assignment)
$ git add .

cc1@Riyadz MINGW64 ~/Assignments (css-assignment)
$ git commit -m "minor change in README.txt hello"
[css-assignment 1fc0617] minor change in README.txt hello
 1 file changed, 1 insertion(+), 1 deletion(-)

cc1@Riyadz MINGW64 ~/Assignments (css-assignment)
$ git checkout master
Switched to branch 'master'

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   README.txt

no changes added to commit (use "git add" and/or "git commit -a")

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git add .

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git commit -m "change in README.txt on master 3rd line"
[master 95094ea] change in README.txt on master 3rd line
 1 file changed, 1 insertion(+)

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git checkout css-assignment
Switched to branch 'css-assignment'

cc1@Riyadz MINGW64 ~/Assignments (css-assignment)
$ git status
On branch css-assignment
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   game.css
        modified:   highscores.css

no changes added to commit (use "git add" and/or "git commit -a")

cc1@Riyadz MINGW64 ~/Assignments (css-assignment)
$ git add .

cc1@Riyadz MINGW64 ~/Assignments (css-assignment)
$ git commit -m "css file content change game & high"
[css-assignment 8cc6110] css file content change game & high
 2 files changed, 2 insertions(+), 2 deletions(-)

cc1@Riyadz MINGW64 ~/Assignments (css-assignment)
$ git checkout master
Switched to branch 'master'

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git merged css-assignment
git: 'merged' is not a git command. See 'git --help'.

The most similar command is
        merge

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git merge css-assignment
Auto-merging README.txt
Merge made by the 'recursive' strategy.
 README.txt     |   2 +-
 app.css        | 127 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 game.css       |  63 ++++++++++++++++++++++++++++
 highscores.css |  14 +++++++
 4 files changed, 205 insertions(+), 1 deletion(-)
 create mode 100644 app.css
 create mode 100644 game.css
 create mode 100644 highscores.css

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git branch -d css-assignment
Deleted branch css-assignment (was 8cc6110).

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git branch js-assignment

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git checkout js-assignment
Switched to branch 'js-assignment'

cc1@Riyadz MINGW64 ~/Assignments (js-assignment)
$ git status
On branch js-assignment
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        end.js
        game.js
        highscores.js

nothing added to commit but untracked files present (use "git add" to track)

cc1@Riyadz MINGW64 ~/Assignments (js-assignment)
$ git add .

cc1@Riyadz MINGW64 ~/Assignments (js-assignment)
$ git commit -m "cpoied js files"
[js-assignment e09a7de] cpoied js files
 3 files changed, 141 insertions(+)
 create mode 100644 end.js
 create mode 100644 game.js
 create mode 100644 highscores.js

cc1@Riyadz MINGW64 ~/Assignments (js-assignment)
$ git status
On branch js-assignment
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   README.txt

no changes added to commit (use "git add" and/or "git commit -a")

cc1@Riyadz MINGW64 ~/Assignments (js-assignment)
$ git add .

cc1@Riyadz MINGW64 ~/Assignments (js-assignment)
$ git commit -m "changes into README.txt"
[js-assignment f9c4fe6] changes into README.txt
 1 file changed, 1 insertion(+), 1 deletion(-)

cc1@Riyadz MINGW64 ~/Assignments (js-assignment)
$ git checkout master
Switched to branch 'master'

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   README.txt

no changes added to commit (use "git add" and/or "git commit -a")

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git add .

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git commit -m "change into README.txt"
[master 5cd773f] change into README.txt
 1 file changed, 1 insertion(+), 1 deletion(-)

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git checkout js-assignment
Switched to branch 'js-assignment'

cc1@Riyadz MINGW64 ~/Assignments (js-assignment)
$ git status
On branch js-assignment
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   game.js

no changes added to commit (use "git add" and/or "git commit -a")

cc1@Riyadz MINGW64 ~/Assignments (js-assignment)
$ git add .

cc1@Riyadz MINGW64 ~/Assignments (js-assignment)
$ git commit -m "changes into game.js"
[js-assignment f92d384] changes into game.js
 1 file changed, 1 insertion(+), 1 deletion(-)

cc1@Riyadz MINGW64 ~/Assignments (js-assignment)
$ git checkout master
Switched to branch 'master'

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git merg js-assignment
git: 'merg' is not a git command. See 'git --help'.

The most similar commands are
        merge
        grep
        mktree

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git merge js-assignment
Auto-merging README.txt
CONFLICT (content): Merge conflict in README.txt
Automatic merge failed; fix conflicts and then commit the result.

cc1@Riyadz MINGW64 ~/Assignments (master|MERGING)
$ git status
On branch master
You have unmerged paths.
  (fix conflicts and run "git commit")
  (use "git merge --abort" to abort the merge)

Changes to be committed:
        new file:   end.js
        new file:   game.js
        new file:   highscores.js

Unmerged paths:
  (use "git add <file>..." to mark resolution)
        both modified:   README.txt


cc1@Riyadz MINGW64 ~/Assignments (master|MERGING)
$ vi README.txt

cc1@Riyadz MINGW64 ~/Assignments (master|MERGING)
$ vim README.md

cc1@Riyadz MINGW64 ~/Assignments (master|MERGING)
$ git status
On branch master
You have unmerged paths.
  (fix conflicts and run "git commit")
  (use "git merge --abort" to abort the merge)

Changes to be committed:
        new file:   end.js
        new file:   game.js
        new file:   highscores.js

Unmerged paths:
  (use "git add <file>..." to mark resolution)
        both modified:   README.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        README.md


cc1@Riyadz MINGW64 ~/Assignments (master|MERGING)
$ git add .

cc1@Riyadz MINGW64 ~/Assignments (master|MERGING)
$ git commit -m "merge js-assignment with html-assignment"
[master e9d4ddd] merge js-assignment with html-assignment

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git branch -d js-assignment
Deleted branch js-assignment (was f92d384).

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git remote add origin https://github.com/aakankshak20/freshersbatch-oct16.git

cc1@Riyadz MINGW64 ~/Assignments (master)
$ git push origin master
Enumerating objects: 58, done.
Counting objects: 100% (58/58), done.
Delta compression using up to 4 threads
Compressing objects: 100% (55/55), done.
Writing objects: 100% (58/58), 8.86 KiB | 362.00 KiB/s, done.
Total 58 (delta 28), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (28/28), done.
To https://github.com/aakankshak20/freshersbatch-oct16.git
 * [new branch]      master -> master
